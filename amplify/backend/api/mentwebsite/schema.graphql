type MenteeProfile @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}]) {
  id: ID!
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
  firstName: String
  lastName: String
  gender: String
  age: String
  ethnicity: [String]
  languages: [String]
  values: [String]
  instagram: String
  facebook: String
  linkedin: String
  profilePicKey: String
  schoolName: String
  programOfStudy: String
  educationLevel: String
  graduationYear: String
  learningGoals: String
  identityId: String
  meetingList: [String] @auth(rules: [{allow: owner}, { allow: private, operations: [read, update] }])
}

type MentorProfile @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}]) {
  id: ID!
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
  firstName: String
  lastName: String
  gender: String
  age: String
  ethnicity: [String]
  languages: [String]
  values: [String]
  instagram: String
  facebook: String
  linkedin: String
  profilePicKey: String
  bio: String
  experience: [String]
  calendly: String
  identityId: String
  meetingList: [String] @auth(rules: [{allow: owner}, { allow: private, operations: [read, update] }])
}

type MenteePreferences @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}]) {
  id: ID!
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
  mentorshipSkills: [String]
  mentorshipType: [String]
  mentorshipFrequency: [String]
  mentorshipGoal: [String]
  learningGoals: String
  menteeId: String
}

type MentorPreferences @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}]) {
  id: ID!
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
  mentorshipSkills: [String]
  mentorshipType: [String]
  mentorshipFrequency: [String]
  mentorshipGoal: [String]
  comments: String
  mentorId: String
}

type Query {
  echo(msg: String): String @function(name: "matchfunction-${env}")
}
